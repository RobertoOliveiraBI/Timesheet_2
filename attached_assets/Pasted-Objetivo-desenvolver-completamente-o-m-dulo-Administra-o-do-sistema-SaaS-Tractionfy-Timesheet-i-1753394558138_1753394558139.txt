Objetivo: desenvolver completamente o m√≥dulo ‚ÄúAdministra√ß√£o‚Äù do sistema SaaS Tractionfy Timesheet, iniciando pela interface e funcionalidades da tela exibida na imagem e implementando todas as tabelas e rotas necess√°rias para funcionamento real do sistema

üß© Subm√≥dulos a implementar:
1. Cadastro de Usu√°rios
Campos:

nome, email, papel (MASTER, ADMIN, GESTOR, COLABORADOR), cargo

gestor (booleano), gestor_responsavel (usu√°rio), regime_contratacao (CLT, PJ)

centro_resultado (GBrasil, GTodos, PPR)

departamento (Cria√ß√£o, Conte√∫do, Design, M√≠dia)

data_inicio_contrato, data_fim_contrato, valor_contrato

raz√£o_social (se PJ), CNPJ (se PJ), data_criacao, senha

Rotas:

POST /api/usuarios ‚Äì cadastrar novo

GET /api/usuarios ‚Äì listar todos

PATCH /api/usuarios/:id ‚Äì editar

DELETE /api/usuarios/:id ‚Äì excluir

Banco:

Tabela: usuarios:{uuid} com os campos acima

2. Cadastro de Grupos Econ√¥micos
Campos:

nome, descri√ß√£o, data_criacao

Rotas:

POST /api/grupos ‚Äì criar grupo econ√¥mico

GET /api/grupos ‚Äì listar grupos

PATCH /api/grupos/:id ‚Äì editar

DELETE /api/grupos/:id ‚Äì excluir

Banco:

Tabela: grupo:{uuid}

3. Cadastro de Clientes
Campos:

razao_social, nome_fantasia, cnpj, email, grupo_economico (id)

Relacionamento:

Cada cliente pertence a 1 grupo econ√¥mico

Rotas:

POST /api/clientes

GET /api/clientes

PATCH /api/clientes/:id

DELETE /api/clientes/:id

Banco:

Tabela: cliente:{uuid}

4. Cadastro de Campanhas
Campos:

nome_campanha, descricao_campanha

inicio_contrato, fim_contrato, valor, cliente (id)

lista_de_usuarios (array de user ids com acesso √† campanha)

Rotas:

POST /api/campanhas

GET /api/campanhas

PATCH /api/campanhas/:id

DELETE /api/campanhas/:id

Banco:

Tabela: campanha:{uuid}

5. Cadastro de Tipos de Tarefa
Campos:

nome (Planejamento, Cria√ß√£o, etc), descri√ß√£o, cor (hex), faturavel (booleano)

Rotas:

POST /api/tipos-tarefa

GET /api/tipos-tarefa

PATCH /api/tipos-tarefa/:id

DELETE /api/tipos-tarefa/:id

Banco:

Tabela: tipo_tarefa:{uuid}

üñ•Ô∏è Frontend ‚Äì Tela de Administra√ß√£o
Dividir tela em 4 blocos:

A√ß√µes r√°pidas (atalhos para abrir os formul√°rios de cria√ß√£o de cada entidade)

Usu√°rios do sistema (lista paginada + bot√£o ‚ÄúNovo Usu√°rio‚Äù)

Tipos de Tarefa (lista atual)

Configura√ß√µes do Sistema:

Fechamento autom√°tico mensal (on/off)

Notifica√ß√µes por email (on/off)

Backup autom√°tico semanal (on/off)

Criar formul√°rios modais com valida√ß√£o para cada entidade

üíæ Configura√ß√µes do Sistema (Simples)
Chave: config:sistema

Campos:

fechamento_automatico: boolean

notificacao_email: boolean

backup_automatico: boolean

Rota:

GET /api/config

PATCH /api/config

üöÄ Instru√ß√µes para Execu√ß√£o
Comece criando os arquivos .html, .js e rotas .js no backend

Use Bootstrap para layout responsivo e campos bem organizados

A cada cria√ß√£o de entidade, salve com um uuidv4() como chave no Replit DB

Armazene as senhas com hash (use bcrypt)

Valide dados obrigat√≥rios no frontend e backend

Permiss√µes: s√≥ ADMIN ou MASTER acessam essa tela